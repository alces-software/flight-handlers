#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_setup_network_interfaces() {
    cw_BAREMETAL_compute_intf=${cw_BAREMETAL_compute_intf:-compute}
    cw_BAREMETAL_infra_intf=${cw_BAREMETAL_infra_intf:-infra}

    # write configurations for compute network and infra network
    cat <<EOF > /etc/sysconfig/network-scripts/ifcfg-${cw_BAREMETAL_compute_intf}
DEVICE="${cw_BAREMETAL_compute_intf}"
ONBOOT="yes"
TYPE="Bridge"
BOOTPROTO="none"
DELAY=0
IPADDR=${cw_BAREMETAL_compute_ip}
NETMASK=${cw_BAREMETAL_compute_netmask}
EOF
    ifdown ${cw_BAREMETAL_compute_intf}
    ifup ${cw_BAREMETAL_compute_intf}

    cat <<EOF > /etc/sysconfig/network-scripts/ifcfg-${cw_BAREMETAL_infra_intf}
DEVICE="${cw_BAREMETAL_infra_intf}"
ONBOOT="yes"
TYPE="Bridge"
BOOTPROTO="none"
DELAY=0
IPADDR=${cw_BAREMETAL_infra_ip}
NETMASK=${cw_BAREMETAL_infra_netmask}
EOF
    ifdown ${cw_BAREMETAL_infra_intf}
    ifup ${cw_BAREMETAL_infra_intf}
}

_setup_customizer_configuration() {
    cat <<EOF > /opt/clusterware/etc/cluster-customizer.rc
################################################################################
##
## Alces Clusterware - Shell configuration
## Copyright (c) 2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
cw_CLUSTER_CUSTOMIZER_bucket="${cw_CLUSTER_CUSTOMIZER_bucket}"
cw_CLUSTER_CUSTOMIZER_access_key_id="${cw_CLUSTER_CUSTOMIZER_access_key_id}"
cw_CLUSTER_CUSTOMIZER_secret_access_key="${cw_CLUSTER_CUSTOMIZER_secret_access_key}"
cw_CLUSTER_CUSTOMIZER_region="${cw_CLUSTER_CUSTOMIZER_region}"
cw_CLUSTER_CUSTOMIZER_feature_set="${cw_CLUSTER_CUSTOMIZER_feature_set}"
cw_CLUSTER_CUSTOMIZER_features="${cw_CLUSTER_CUSTOMIZER_features}"
cw_CLUSTER_CUSTOMIZER_profiles="${cw_CLUSTER_CUSTOMIZER_profiles}"
EOF
    chmod 0640 /opt/clusterware/etc/cluster-customizer.rc
}

_setup_cluster_configuration() {
    if [ "${cw_BAREMETAL_node_role}" == "slave" ]; then
        cat <<EOF > /opt/clusterware/etc/config.yml
cluster:
  name: '${cw_BAREMETAL_cluster_name}'
  domain: '${cw_BAREMETAL_domain}'
  role: 'slave'
  interface: ${cw_BAREMETAL_compute_intf}
  master: ${cw_BAREMETAL_master_node_ip}
  tags:
    scheduler_roles: ':compute:'
  uuid: ${cw_BAREMETAL_cluster_uuid}
  token: ${cw_BAREMETAL_cluster_token}
EOF
    elif [ "${cw_BAREMETAL_node_role}" == "master" ]; then
        cat <<EOF > /opt/clusterware/etc/config.yml
cluster:
  name: '${cw_BAREMETAL_cluster_name}'
  domain: '${cw_BAREMETAL_domain}'
  role: 'master'
  host_naming: 'allocate'
  hostname: '${cw_BAREMETAL_node_hostname}'
  interface: ${cw_BAREMETAL_compute_intf}
  tags:
    scheduler_roles: ':master:'
    storage_roles: ':master:'
    access_roles: ':master:'
  autoscaling: autodetect
  uuid: ${cw_BAREMETAL_cluster_uuid}
  token: ${cw_BAREMETAL_cluster_token}
EOF
    else
        cat <<EOF > /opt/clusterware/etc/config.yml
cluster:
  name: '${cw_BAREMETAL_cluster_name}'
  domain: '${cw_BAREMETAL_domain}'
  role: '${cw_BAREMETAL_node_role}'
  master: ${cw_BAREMETAL_master_node_ip}
  uuid: ${cw_BAREMETAL_cluster_uuid}
  token: ${cw_BAREMETAL_cluster_token}
EOF
    fi
    chmod 0640 /opt/clusterware/etc/config.yml
}

main() {
    files_load_config baremetal

    # Bail out if we're already configured (this is a reboot)
    if [ -d "${cw_ROOT}/etc/config/baremetal" ]; then
        exit 0
    fi
    mkdir -p "${cw_ROOT}/etc/config/baremetal"

    _setup_network_interfaces
    _setup_customizer_configuration
    _setup_cluster_configuration
}

setup

require handler
require files

handler_tee main "$@"
