#!/bin/bash
################################################################################
##
## Alces Clusterware - Handler hook
## Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
##
################################################################################
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.rc ]; then
            source "${a}"/clusterware/config.rc
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

_install_nginx_conf() {
  local srcname target tgtname
  srcname="$1"
  target="$2"
  tgtname="${3:-${srcname}}"
  sed -e "s,_ROOT_,${cw_ROOT},g" \
    "$(handler_dir)"/${srcname}.conf.tpl \
    > "${cw_ROOT}"/etc/alces-flight-www/${target}.d/${tgtname}.conf
}

_handle_port() {
    local scheme enabled port alt_port_base
    scheme="$1"
    enabled="$2"
    port="$3"
    alt_port_base="$4"
    if [ "${enabled}" == "true" ]; then
        if ss -tln | grep -q ":${port}\b"; then
            port=$(network_get_free_port ${alt_port_base})
            # update alces-flight-www config
            sed -i "s/^#?cw_ALCES_FLIGHT_WWW_${scheme}_port=.*/cw_ALCES_FLIGHT_WWW_${scheme}_port=${port}/g" \
                "${cw_ROOT}"/etc/alces-flight-www.rc
        fi
        handler_iptables_insert INPUT -p tcp --dport $port -j ACCEPT 1>&2
    else
        port=""
    fi
    echo "${port}"
}

_update_dynamic_values() {
    local host ipAddress tmpfile redirectUrl
    files_load_config --optional access
    files_load_config --optional cluster-www
    host="${cw_ACCESS_fqdn:-$(network_get_public_hostname)}"
    ipAddress="$(network_get_public_address)"

    tmpfile="$(mktemp /tmp/cluster-www.XXXXXXXX)"

    # dynamic values (per-boot)
    $_JQ --arg host $host --arg ipAddress $ipAddress \
        '.data.attributes.hostname = $host | .data.attributes.ipAddress = $ipAddress' \
	"${cw_ROOT}"/var/lib/alces-flight-www/flight/www/index.json \
	> ${tmpfile}
    chmod a+r "${tmpfile}"
    mv ${tmpfile} "${cw_ROOT}"/var/lib/alces-flight-www/flight/www/index.json

    _install_nginx_conf cluster-www server-http
    _install_nginx_conf cluster-www server-https
    _install_nginx_conf redirect-https-to-launch-service server-https


    # XXX This method of determining the URL to redirect to is duplicated in
    # cluster-vpn/configure.  Figure out a way to remove the duplication.
    # Perhaps a script similar to `www-add-attributes` is the way to go.
    redirectUrl=$(
        echo "${cw_CLUSTER_WWW_redirect_url_template:-https://manage.alces-flight.com/cluster/_HOSTNAME_}" \
        | sed -e "s,_HOSTNAME_,${host},g"
    )
    sed -i -e "s,_REDIRECT_URL_,${redirectUrl},g" \
        "${cw_ROOT}"/etc/alces-flight-www/server-https.d/redirect-https-to-launch-service.conf
}

main() {
    local http_port https_port host edition

    # Bail out if we're already configured (this is a reboot)
    if [ -d "${cw_ROOT}/etc/config/cluster-www" ]; then
        _update_dynamic_values
        exit 0
    fi

    mkdir -p "${cw_ROOT}"/var/lib/alces-flight-www/flight/www
    edition="$(network_get_edition)"
    if [ "${edition}" == "professional" ]; then
        cp "$(handler_dir)"/libexec/www-add-attributes "${cw_ROOT}"/libexec/share/www-add-attributes
    fi

    mkdir -p "${cw_ROOT}/etc/config/cluster-www"

    files_load_config instance config/cluster

    if [[ "${cw_INSTANCE_role}" != "master" ]]; then
        return 0
    fi

    files_load_config config config/cluster
    files_load_config alces-flight-www
    if [ -z "${cw_ALCES_FLIGHT_WWW_ssl_strategy}" -a "${cw_CLUSTER_host_naming}" == "allocate" ]; then
        sed -i -e 's/^#cw_ALCES_FLIGHT_WWW_ssl_strategy=.*/cw_ALCES_FLIGHT_WWW_ssl_strategy=allocate/g' \
            "${cw_ROOT}"/etc/alces-flight-www.rc
    fi

    # if there's already a server listening on the port(s) that
    # alces-flight-www is configured for, try a couple of different
    # ports.
    http_port=$(_handle_port http "${cw_ALCES_FLIGHT_WWW_http_enabled:-true}" \
                 "${cw_ALCES_FLIGHT_WWW_http_port:-80}" 8080)
    if [ "$http_port" != "80" ]; then
        http_port=":${http_port}"
    else
        http_port=""
    fi

    https_port=$(_handle_port https "${cw_ALCES_FLIGHT_WWW_https_enabled:-true}" \
                              "${cw_ALCES_FLIGHT_WWW_https_port:-443}" 8443)
    if [ "$https_port" != "443" ]; then
        https_port=":${https_port}"
    else
        https_port=""
    fi

    # Enable the component
    ${_ALCES} service enable alces-flight-www
    # We manually deal with this service via the handler, so disable
    # it from automatic startup.
    distro_disable_service clusterware-alces-flight-www

    files_load_config --optional access

    # Add access info to www metadata file
    cat <<EOF > "${cw_ROOT}"/etc/meta.d/www.rc
: '
: SYNOPSIS: Web access details
: HELP: Display information about the web service configuration for this cluster.
: '
################################################################################
##
## Alces Clusterware - Metadata file
## Copyright (c) 2016 Alces Software Ltd
##
################################################################################
EOF

    host="${cw_ACCESS_fqdn:-$(network_get_public_hostname)}"
    if [ "${cw_ALCES_FLIGHT_WWW_https_enabled:-true}" == "true" ]; then
        echo "cw_META_www_https_desc=\"HTTPS access point\"" >> "${cw_ROOT}"/etc/meta.d/www.rc
        echo "cw_META_www_https=\"https://${host}${https_port}/\"" >> "${cw_ROOT}"/etc/meta.d/www.rc
    fi
    if [ "${cw_ALCES_FLIGHT_WWW_http_enabled:-true}" == "true" ]; then
        echo "cw_META_www_http_desc=\"HTTP access point\"" >> "${cw_ROOT}"/etc/meta.d/www.rc
        echo "cw_META_www_http=\"http://${host}${http_port}/\"" >> "${cw_ROOT}"/etc/meta.d/www.rc
    fi

    # override the default document root to point to flight website
    if [ -f "${cw_ROOT}"/etc/alces-flight-www/server-http.d/document-root.conf ]; then
        echo "root $cw_ROOT/var/lib/alces-flight-www/flight;" > \
             "${cw_ROOT}"/etc/alces-flight-www/server-http.d/document-root.conf
    fi
    if [ -f "${cw_ROOT}"/etc/alces-flight-www/server-https.d/document-root.conf ]; then
        echo "root $cw_ROOT/var/lib/alces-flight-www/flight;" > \
             "${cw_ROOT}"/etc/alces-flight-www/server-https.d/document-root.conf
    fi

    # Create the response document with configuration values.
    local host
    files_load_config clusterware
    files_load_config --optional flight

    $_JO -p data=$( $_JO \
        id=${cw_CLUSTER_uuid} \
        type="clusters" \
        attributes=$( $_JO \
            clusterName="${cw_CLUSTER_name}" \
            edition="${edition}" \
            flightRelease="${cw_FLIGHT_release:-${cw_VERSION}}"
        )
    ) > "${cw_ROOT}"/var/lib/alces-flight-www/flight/www/index.json

    _update_dynamic_values
}

setup
require handler
require files
require network
require distro

_ALCES="${cw_ROOT}"/bin/alces
_JO="${cw_ROOT}"/opt/jo/bin/jo
_JQ="${cw_ROOT}"/opt/jq/bin/jq

handler_tee main "$@"
