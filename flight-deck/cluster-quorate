#!/bin/bash
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local count
    count="$1"
    . "${cw_ROOT}"/etc/config/cluster/config.rc
    . "${cw_ROOT}"/etc/config/cluster/auth.rc
    cat <<JSON | webapi_patch \
        "${cw_CLUSTER_service_url}"/clusters/"${cw_CLUSTER_uuid}" \
        --auth "${cw_CLUSTER_uuid}:${cw_CLUSTER_auth_token}"
{
    "data": {
        "type": "clusters",
        "id": "${cw_CLUSTER_uuid}",
        "attributes": {
            "status": "quorate",
            "count": "${count}"
        }
    }
}
JSON
}

setup
require webapi
require handler

handler_tee main "$@"
